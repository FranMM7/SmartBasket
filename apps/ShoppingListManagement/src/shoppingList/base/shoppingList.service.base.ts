/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ShoppingList as PrismaShoppingList } from "@prisma/client";

export class ShoppingListServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ShoppingListCountArgs, "select">
  ): Promise<number> {
    return this.prisma.shoppingList.count(args);
  }

  async shoppingLists<T extends Prisma.ShoppingListFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShoppingListFindManyArgs>
  ): Promise<PrismaShoppingList[]> {
    return this.prisma.shoppingList.findMany<Prisma.ShoppingListFindManyArgs>(
      args
    );
  }
  async shoppingList<T extends Prisma.ShoppingListFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShoppingListFindUniqueArgs>
  ): Promise<PrismaShoppingList | null> {
    return this.prisma.shoppingList.findUnique(args);
  }
  async createShoppingList<T extends Prisma.ShoppingListCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShoppingListCreateArgs>
  ): Promise<PrismaShoppingList> {
    return this.prisma.shoppingList.create<T>(args);
  }
  async updateShoppingList<T extends Prisma.ShoppingListUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShoppingListUpdateArgs>
  ): Promise<PrismaShoppingList> {
    return this.prisma.shoppingList.update<T>(args);
  }
  async deleteShoppingList<T extends Prisma.ShoppingListDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ShoppingListDeleteArgs>
  ): Promise<PrismaShoppingList> {
    return this.prisma.shoppingList.delete(args);
  }
}
